{
  "paragraphs": [
    {
      "text": "%md\n\n### Implement optimization rule\n* implement rule that converts CaseWhen to If expression if it is possible (CaseWhen has only one branch)\n* add the rule to Catalyst\n* see its impact in the plan",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:29:53.869",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eImplement optimization rule\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eimplement rule that converts CaseWhen to If expression if it is possible (CaseWhen has only one branch)\u003c/li\u003e\n  \u003cli\u003eadd the rule to Catalyst\u003c/li\u003e\n  \u003cli\u003esee its impact in the plan\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710872611_-707115463",
      "id": "20191207-102752_1858665541",
      "dateCreated": "2019-12-07 10:27:52.611",
      "dateStarted": "2019-12-07 10:29:53.870",
      "dateFinished": "2019-12-07 10:29:53.876",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.sql.catalyst.expressions.{CaseWhen, If, Literal}\nimport org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\nimport org.apache.spark.sql.catalyst.rules.Rule",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:18:45.545",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.catalyst.expressions.{CaseWhen, If, Literal}\nimport org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\nimport org.apache.spark.sql.catalyst.rules.Rule\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710148034_-1096438989",
      "id": "20191207-101548_1804278861",
      "dateCreated": "2019-12-07 10:15:48.034",
      "dateStarted": "2019-12-07 10:18:45.553",
      "dateFinished": "2019-12-07 10:18:45.686",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val usersDF \u003d spark.table(\"users\")",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:20:26.265",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "usersDF: org.apache.spark.sql.DataFrame \u003d [user_id: bigint, display_name: string ... 5 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710414972_-191022885",
      "id": "20191207-102014_1333979185",
      "dateCreated": "2019-12-07 10:20:14.972",
      "dateStarted": "2019-12-07 10:20:26.275",
      "dateFinished": "2019-12-07 10:20:26.485",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Use the following trnasformation",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:30:13.588",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eUse the following trnasformation\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710998041_920365894",
      "id": "20191207-102958_1632313925",
      "dateCreated": "2019-12-07 10:29:58.041",
      "dateStarted": "2019-12-07 10:30:13.590",
      "dateFinished": "2019-12-07 10:30:13.593",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transformed \u003d usersDF.withColumn(\"skill\", when($\"reputation\" \u003e 1000, lit(\"advanced\")).otherwise(\"basic\")).select(\"skill\")",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:22:14.062",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "transformed: org.apache.spark.sql.DataFrame \u003d [skill: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710355445_-1953505417",
      "id": "20191207-101915_1245706252",
      "dateCreated": "2019-12-07 10:19:15.445",
      "dateStarted": "2019-12-07 10:22:14.073",
      "dateFinished": "2019-12-07 10:22:14.274",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "transformed.explain()",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:22:16.842",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003d\u003d Physical Plan \u003d\u003d\n*(1) Project [CASE WHEN (reputation#40L \u003e 1000) THEN advanced ELSE basic END AS skill#1175]\n+- *(1) FileScan parquet default.users[reputation#40L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/Users/david.vrba/spark-trainings/Apache-Spark-for-Data-Engineers/output/u..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct\u003creputation:bigint\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710479984_-118212728",
      "id": "20191207-102119_1729436231",
      "dateCreated": "2019-12-07 10:21:19.984",
      "dateStarted": "2019-12-07 10:22:16.854",
      "dateFinished": "2019-12-07 10:22:16.983",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Implement the rule",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:30:39.517",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eImplement the rule\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575711025278_-1856442216",
      "id": "20191207-103025_437733267",
      "dateCreated": "2019-12-07 10:30:25.278",
      "dateStarted": "2019-12-07 10:30:39.517",
      "dateFinished": "2019-12-07 10:30:39.520",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "object ConvertWhenToIf extends Rule[LogicalPlan]{\n    override def apply(plan: LogicalPlan): LogicalPlan \u003d plan transformAllExpressions {\n        case e @ CaseWhen(branches, elseValue) if branches.length \u003d\u003d 1 \u003d\u003e\n            // If there is only one branch in the CaseWhen rewrite it to If\n            // which has more efficient codeGen\n            If(branches(0)._1, branches(0)._2, elseValue.getOrElse(Literal.create(null, e.dataType)))\n    }\n}",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:26:41.923",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined object ConvertWhenToIf\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575709480228_-454316014",
      "id": "20191207-100440_1151312017",
      "dateCreated": "2019-12-07 10:04:40.228",
      "dateStarted": "2019-12-07 10:26:32.921",
      "dateFinished": "2019-12-07 10:26:33.680",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Register the rule",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:31:53.223",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eRegister the rule\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575711104818_1232826394",
      "id": "20191207-103144_807533642",
      "dateCreated": "2019-12-07 10:31:44.818",
      "dateStarted": "2019-12-07 10:31:53.223",
      "dateFinished": "2019-12-07 10:31:53.226",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "spark.experimental.extraOptimizations \u003d Seq(ConvertWhenToIf)",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:26:49.222",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "spark.experimental.extraOptimizations: Seq[org.apache.spark.sql.catalyst.rules.Rule[org.apache.spark.sql.catalyst.plans.logical.LogicalPlan]] \u003d List(ConvertWhenToIf$@94e6717)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710208120_-1024963161",
      "id": "20191207-101648_1144755160",
      "dateCreated": "2019-12-07 10:16:48.120",
      "dateStarted": "2019-12-07 10:26:49.234",
      "dateFinished": "2019-12-07 10:26:49.513",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Run the query again",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:32:11.232",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eRun the query again\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575711118051_-775796672",
      "id": "20191207-103158_384107018",
      "dateCreated": "2019-12-07 10:31:58.051",
      "dateStarted": "2019-12-07 10:32:11.232",
      "dateFinished": "2019-12-07 10:32:11.235",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transformedWithRule \u003d usersDF.withColumn(\"skill\", when($\"reputation\" \u003e 1000, lit(\"advanced\")).otherwise(\"basic\")).select(\"skill\")",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:27:17.027",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "transformedWithRule: org.apache.spark.sql.DataFrame \u003d [skill: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710809222_1998503340",
      "id": "20191207-102649_764867750",
      "dateCreated": "2019-12-07 10:26:49.222",
      "dateStarted": "2019-12-07 10:27:17.038",
      "dateFinished": "2019-12-07 10:27:17.285",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### See the plan again",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:32:19.169",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eSee the plan again\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575711133119_610370783",
      "id": "20191207-103213_2090894607",
      "dateCreated": "2019-12-07 10:32:13.119",
      "dateStarted": "2019-12-07 10:32:19.170",
      "dateFinished": "2019-12-07 10:32:19.173",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "transformedWithRule.explain()",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 10:27:25.371",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003d\u003d Physical Plan \u003d\u003d\n*(1) Project [if ((reputation#40L \u003e 1000)) advanced else basic AS skill#1186]\n+- *(1) FileScan parquet default.users[reputation#40L] Batched: true, Format: Parquet, Location: InMemoryFileIndex[file:/Users/david.vrba/spark-trainings/Apache-Spark-for-Data-Engineers/output/u..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct\u003creputation:bigint\u003e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575710837027_-2110138855",
      "id": "20191207-102717_1963385060",
      "dateCreated": "2019-12-07 10:27:17.027",
      "dateStarted": "2019-12-07 10:27:25.385",
      "dateFinished": "2019-12-07 10:27:25.603",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575710845371_-1085017573",
      "id": "20191207-102725_867881392",
      "dateCreated": "2019-12-07 10:27:25.371",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "solutions/logical-planning/logical-plans-I",
  "id": "2EWCV7HVT",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}