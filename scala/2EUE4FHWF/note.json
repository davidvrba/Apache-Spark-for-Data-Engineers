{
  "paragraphs": [
    {
      "text": "%md\n\n# To each question choose only answers with maximal score\n\n* work with answers dataset\n* output:\n * all columns of answers\n * rows are filtered: for each question we want only answers that have maximal score\n \n### Implement the solution using two different ways and discuss/compare their performance\n* using groupBy + join\n* using window\n* try to optimize it if possible",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:00:00.455",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eTo each question choose only answers with maximal score\u003c/h1\u003e\n\u003cul\u003e\n  \u003cli\u003ework with answers dataset\u003c/li\u003e\n  \u003cli\u003eoutput:\u003c/li\u003e\n  \u003cli\u003eall columns of answers\u003c/li\u003e\n  \u003cli\u003erows are filtered: for each question we want only answers that have maximal score\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eImplement the solution using two different ways and discuss/compare their performance\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eusing groupBy + join\u003c/li\u003e\n  \u003cli\u003eusing window\u003c/li\u003e\n  \u003cli\u003etry to optimize it if possible\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705322500_-838114919",
      "id": "20191207-085522_1508496532",
      "dateCreated": "2019-12-07 08:55:22.500",
      "dateStarted": "2019-12-07 09:00:00.455",
      "dateFinished": "2019-12-07 09:00:00.461",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.sql.expressions.{Window}",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:03:58.731",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.expressions.Window\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705820757_280043725",
      "id": "20191207-090340_155339565",
      "dateCreated": "2019-12-07 09:03:40.757",
      "dateStarted": "2019-12-07 09:03:58.741",
      "dateFinished": "2019-12-07 09:03:58.837",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val answersDF \u003d spark.table(\"answers\") ",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:00:46.558",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "answersDF: org.apache.spark.sql.DataFrame \u003d [question_id: bigint, answer_id: bigint ... 4 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705629375_-1659537204",
      "id": "20191207-090029_1571508997",
      "dateCreated": "2019-12-07 09:00:29.376",
      "dateStarted": "2019-12-07 09:00:46.568",
      "dateFinished": "2019-12-07 09:00:46.738",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 1) Use groupBy + Join",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:00:03.937",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e1) Use groupBy + Join\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705354051_315481200",
      "id": "20191207-085554_1792324951",
      "dateCreated": "2019-12-07 08:55:54.051",
      "dateStarted": "2019-12-07 09:00:03.938",
      "dateFinished": "2019-12-07 09:00:03.976",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\nval maximal_socre \u003d answersDF\n  .groupBy(\"question_id\")\n  .agg(\n    max(\"score\").alias(\"maxScore\")\n  )\n\nval r1 \u003d answersDF\n  .join(maximal_socre, Seq(\"question_id\"), \"left\")\n  .filter($\"score\" \u003d\u003d\u003d $\"maxScore\")\n\nr1.collect()",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:02:08.959",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "maximal_socre: org.apache.spark.sql.DataFrame \u003d [question_id: bigint, maxScore: bigint]\nr1: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [question_id: bigint, answer_id: bigint ... 5 more fields]\nres48: Array[org.apache.spark.sql.Row] \u003d Array([290396,290410,2016-11-02 17:15:07.83,4,1325,-1,-1], [362209,362226,2017-10-11 06:15:11.9,0,104696,-1,-1], [412690,413551,2018-06-25 04:54:32.877,3,813,-1,-1], [162632,162635,2015-01-31 19:09:52.7,9,45613,0,0], [165828,165838,2015-02-19 02:14:41.743,0,5739,0,0], [166060,166061,2015-02-20 09:57:15.64,2,23339,0,0], [171324,171336,2015-03-20 04:28:16.87,0,null,0,0], [188165,188167,2015-06-07 13:52:49.433,0,71784,0,0], [201709,201714,2015-08-21 11:56:46.387,0,46708,0,0], [204042,204045,2015-09-03 15:30:55.727,3,90865,0,0], [204042,204059,20..."
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705362271_487206526",
      "id": "20191207-085602_1017116180",
      "dateCreated": "2019-12-07 08:56:02.271",
      "dateStarted": "2019-12-07 09:02:08.969",
      "dateFinished": "2019-12-07 09:02:23.230",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 2) Use Window",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:02:38.523",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e2) Use Window\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705398625_181742229",
      "id": "20191207-085638_1662206266",
      "dateCreated": "2019-12-07 08:56:38.625",
      "dateStarted": "2019-12-07 09:02:38.524",
      "dateFinished": "2019-12-07 09:02:38.527",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val w \u003d Window.partitionBy(\"question_id\")\n\nval r2 \u003d answersDF\n  .withColumn(\"maxScore\", max(\"score\").over(w))\n  .filter($\"maxScore\" \u003d\u003d\u003d $\"score\")\n\nr2.collect()",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:04:02.049",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "w: org.apache.spark.sql.expressions.WindowSpec \u003d org.apache.spark.sql.expressions.WindowSpec@7f02e107\nr2: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [question_id: bigint, answer_id: bigint ... 5 more fields]\nres50: Array[org.apache.spark.sql.Row] \u003d Array([156388,444144,2018-11-30 00:44:17.12,1,161101,2,2], [158917,159016,2015-01-12 16:51:26.93,2,1325,2,2], [158944,158961,2015-01-12 10:18:52.967,5,30833,2,2], [159308,165035,2015-02-14 14:48:36.893,1,59215,3,3], [160383,160558,2015-01-21 00:25:20.983,0,68743,4,4], [160584,160600,2015-01-21 09:31:39.767,7,67847,6,6], [160975,160979,2015-01-23 09:58:39.537,2,1325,1,1], [161095,161099,2015-01-23 22:29:17.393,0,63535,2,2], [161468,161487,2015-01-25 21:24:37.727,1,70958,1,1], [161736,161748,2015-01-27 08:09:02.523,0,71700,2,2], [..."
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705409213_-235855825",
      "id": "20191207-085649_1689942597",
      "dateCreated": "2019-12-07 08:56:49.213",
      "dateStarted": "2019-12-07 09:04:02.060",
      "dateFinished": "2019-12-07 09:04:03.353",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Broadcast Hash Join\nIf the aggregated data is small, use broadcast hint to speed up the join",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:42:40.284",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eBroadcast Hash Join\u003c/h3\u003e\n\u003cp\u003eIf the aggregated data is small, use broadcast hint to speed up the join\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575708103134_-1663269552",
      "id": "20191207-094143_1144550364",
      "dateCreated": "2019-12-07 09:41:43.134",
      "dateStarted": "2019-12-07 09:42:40.285",
      "dateFinished": "2019-12-07 09:42:40.289",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val maximal_socre \u003d answersDF\n  .groupBy(\"question_id\")\n  .agg(\n    max(\"score\").alias(\"maxScore\")\n  )\n\nval r1 \u003d answersDF\n  .join(broadcast(maximal_socre), Seq(\"question_id\"), \"left\")\n  .filter($\"score\" \u003d\u003d\u003d $\"maxScore\")\n\nr1.collect()",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:41:20.799",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "maximal_socre: org.apache.spark.sql.DataFrame \u003d [question_id: bigint, maxScore: bigint]\nr1: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [question_id: bigint, answer_id: bigint ... 5 more fields]\nres54: Array[org.apache.spark.sql.Row] \u003d Array([300453,300462,2016-12-23 13:01:13.643,1,140096,7,7], [200329,200416,2015-08-14 20:37:49.177,0,63690,1,1], [294543,294624,2016-11-24 17:17:48.237,9,6974,0,0], [294710,295061,2016-11-27 02:29:17.543,2,114696,2,2], [184300,184316,2015-05-16 03:56:58.953,0,81366,1,1], [353206,353217,2017-08-22 19:01:48.167,0,149533,0,0], [397003,397008,2018-04-01 13:31:08.643,1,189394,6,6], [234341,234481,2016-02-08 08:53:39.72,0,null,1,1], [259302,259310,2016-06-02 08:38:32.453,7,1325,3,3], [341166,341382,2017-06-25 17:21:13.913,0,44126,0,0], [353117,3531..."
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705811944_1256635263",
      "id": "20191207-090331_166606726",
      "dateCreated": "2019-12-07 09:03:31.944",
      "dateStarted": "2019-12-07 09:41:20.809",
      "dateFinished": "2019-12-07 09:41:22.721",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575705996844_-1808524939",
      "id": "20191207-090636_702298268",
      "dateCreated": "2019-12-07 09:06:36.844",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "solutions/physical-planning/physical-plans-IV",
  "id": "2EUE4FHWF",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}