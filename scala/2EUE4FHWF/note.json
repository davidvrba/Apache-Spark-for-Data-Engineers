{
  "paragraphs": [
    {
      "text": "%md\n\n# To each question choose only answers with maximal score\n\n* work with answers dataset\n* output:\n * all columns of answers\n * rows are filtered: for each question we want only answers that have maximal score\n \n### Implement the solution using two different ways and discuss/compare their performance\n* using groupBy + join\n* using window\n* try to optimize it if possible",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 15:33:39.384",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eTo each question choose only answers with maximal score\u003c/h1\u003e\n\u003cul\u003e\n  \u003cli\u003ework with answers dataset\u003c/li\u003e\n  \u003cli\u003eoutput:\u003c/li\u003e\n  \u003cli\u003eall columns of answers\u003c/li\u003e\n  \u003cli\u003erows are filtered: for each question we want only answers that have maximal score\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eImplement the solution using two different ways and discuss/compare their performance\u003c/h3\u003e\n\u003cul\u003e\n  \u003cli\u003eusing groupBy + join\u003c/li\u003e\n  \u003cli\u003eusing window\u003c/li\u003e\n  \u003cli\u003etry to optimize it if possible\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705322500_-838114919",
      "id": "20191207-085522_1508496532",
      "dateCreated": "2019-12-07 08:55:22.500",
      "dateStarted": "2019-12-07 15:33:39.384",
      "dateFinished": "2019-12-07 15:33:39.390",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.sql.expressions.{Window}",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:03:58.731",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575705820757_280043725",
      "id": "20191207-090340_155339565",
      "dateCreated": "2019-12-07 09:03:40.757",
      "dateStarted": "2019-12-07 09:03:58.741",
      "dateFinished": "2019-12-07 09:03:58.837",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val answersDF \u003d spark.table(\"answers\") ",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:00:46.558",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575705629375_-1659537204",
      "id": "20191207-090029_1571508997",
      "dateCreated": "2019-12-07 09:00:29.376",
      "dateStarted": "2019-12-07 09:00:46.568",
      "dateFinished": "2019-12-07 09:00:46.738",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 1) Use groupBy + Join",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 15:34:15.403",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e1) Use groupBy + Join\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705354051_315481200",
      "id": "20191207-085554_1792324951",
      "dateCreated": "2019-12-07 08:55:54.051",
      "dateStarted": "2019-12-07 15:34:15.403",
      "dateFinished": "2019-12-07 15:34:15.406",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\nval maximal_socre \u003d answersDF\n  .groupBy(\"question_id\")\n  .agg(\n    max(\"score\").alias(\"maxScore\")\n  )\n\nval r1 \u003d answersDF\n  .join(maximal_socre, Seq(\"question_id\"), \"left\")\n  .filter($\"score\" \u003d\u003d\u003d $\"maxScore\")\n\nr1.collect()",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:02:08.959",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575705362271_487206526",
      "id": "20191207-085602_1017116180",
      "dateCreated": "2019-12-07 08:56:02.271",
      "dateStarted": "2019-12-07 09:02:08.969",
      "dateFinished": "2019-12-07 09:02:23.230",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### 2) Use Window",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 15:34:20.357",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003e2) Use Window\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575705398625_181742229",
      "id": "20191207-085638_1662206266",
      "dateCreated": "2019-12-07 08:56:38.625",
      "dateStarted": "2019-12-07 15:34:20.357",
      "dateFinished": "2019-12-07 15:34:20.359",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val w \u003d Window.partitionBy(\"question_id\")\n\nval r2 \u003d answersDF\n  .withColumn(\"maxScore\", max(\"score\").over(w))\n  .filter($\"maxScore\" \u003d\u003d\u003d $\"score\")\n\nr2.collect()",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:04:02.049",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575705409213_-235855825",
      "id": "20191207-085649_1689942597",
      "dateCreated": "2019-12-07 08:56:49.213",
      "dateStarted": "2019-12-07 09:04:02.060",
      "dateFinished": "2019-12-07 09:04:03.353",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Broadcast Hash Join\nIf the aggregated data is small, use broadcast hint to speed up the join",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 15:34:23.157",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eBroadcast Hash Join\u003c/h3\u003e\n\u003cp\u003eIf the aggregated data is small, use broadcast hint to speed up the join\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575708103134_-1663269552",
      "id": "20191207-094143_1144550364",
      "dateCreated": "2019-12-07 09:41:43.134",
      "dateStarted": "2019-12-07 15:34:23.157",
      "dateFinished": "2019-12-07 15:34:23.160",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val maximal_socre \u003d answersDF\n  .groupBy(\"question_id\")\n  .agg(\n    max(\"score\").alias(\"maxScore\")\n  )\n\nval r1 \u003d answersDF\n  .join(broadcast(maximal_socre), Seq(\"question_id\"), \"left\")\n  .filter($\"score\" \u003d\u003d\u003d $\"maxScore\")\n\nr1.collect()",
      "user": "anonymous",
      "dateUpdated": "2019-12-07 09:41:20.799",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575705811944_1256635263",
      "id": "20191207-090331_166606726",
      "dateCreated": "2019-12-07 09:03:31.944",
      "dateStarted": "2019-12-07 09:41:20.809",
      "dateFinished": "2019-12-07 09:41:22.721",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1575705996844_-1808524939",
      "id": "20191207-090636_702298268",
      "dateCreated": "2019-12-07 09:06:36.844",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "solutions/physical-planning/physical-plans-IV",
  "id": "2EUE4FHWF",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}